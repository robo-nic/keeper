{"ast":null,"code":"import _objectSpread from\"/home/mr-paul/workspace/web-development/react-apps/keeper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/mr-paul/workspace/web-development/react-apps/keeper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import AddIcon from\"@material-ui/icons/Add\";import Zoom from\"@material-ui/core/Zoom\";import FAB from\"@material-ui/core/Fab\";function CreateArea(props){const _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isExpanded=_React$useState2[0],setIsExpanded=_React$useState2[1];const _React$useState3=React.useState({title:\"\",content:\"\"}),_React$useState4=_slicedToArray(_React$useState3,2),note=_React$useState4[0],setNote=_React$useState4[1];function handleChange(event){const _event$target=event.target,value=_event$target.value,name=_event$target.name;setNote(prevNote=>{return _objectSpread(_objectSpread({},prevNote),{},{[name]:value});});}function expandNoteArea(){setIsExpanded(true);}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:e=>e.preventDefault()},isExpanded&&/*#__PURE__*/React.createElement(\"input\",{onChange:handleChange,name:\"title\",placeholder:\"Title\",value:note.title}),/*#__PURE__*/React.createElement(\"textarea\",{onClick:expandNoteArea,onChange:handleChange,name:\"content\",placeholder:\"Take a note...\",rows:isExpanded?\"3\":\"1\",value:note.content}),/*#__PURE__*/React.createElement(Zoom,{in:isExpanded},/*#__PURE__*/React.createElement(FAB,{className:\"button\",onClick:()=>{props.addNote(note);setIsExpanded(false);setNote({title:\"\",content:\"\"});}},/*#__PURE__*/React.createElement(AddIcon,null)))));}export default CreateArea;","map":{"version":3,"sources":["/home/mr-paul/workspace/web-development/react-apps/keeper/src/components/CreateArea.jsx"],"names":["React","AddIcon","Zoom","FAB","CreateArea","props","useState","isExpanded","setIsExpanded","title","content","note","setNote","handleChange","event","target","value","name","prevNote","expandNoteArea","e","preventDefault","addNote"],"mappings":"+VAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,uBACWL,KAAK,CAACM,QAAN,CAAe,KAAf,CADX,oDAClBC,UADkB,qBACNC,aADM,4CAGDR,KAAK,CAACM,QAAN,CAAe,CACrCG,KAAK,CAAE,EAD8B,CAErCC,OAAO,CAAE,EAF4B,CAAf,CAHC,qDAGlBC,IAHkB,qBAGZC,OAHY,qBAQzB,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,qBACHA,KAAK,CAACC,MADH,CACnBC,KADmB,eACnBA,KADmB,CACZC,IADY,eACZA,IADY,CAG3BL,OAAO,CAAEM,QAAD,EAAc,CACpB,sCACKA,QADL,MAEE,CAACD,IAAD,EAAQD,KAFV,GAID,CALM,CAAP,CAMD,CAED,QAASG,CAAAA,cAAT,EAA0B,CACxBX,aAAa,CAAC,IAAD,CAAb,CACD,CAED,mBACE,4CACE,4BAAM,QAAQ,CAAGY,CAAD,EAAOA,CAAC,CAACC,cAAF,EAAvB,EACGd,UAAU,eACT,6BACE,QAAQ,CAAEM,YADZ,CAEE,IAAI,CAAC,OAFP,CAGE,WAAW,CAAC,OAHd,CAIE,KAAK,CAAEF,IAAI,CAACF,KAJd,EAFJ,cASE,gCACE,OAAO,CAAEU,cADX,CAEE,QAAQ,CAAEN,YAFZ,CAGE,IAAI,CAAC,SAHP,CAIE,WAAW,CAAC,gBAJd,CAKE,IAAI,CAAEN,UAAU,CAAG,GAAH,CAAS,GAL3B,CAME,KAAK,CAAEI,IAAI,CAACD,OANd,EATF,cAiBE,oBAAC,IAAD,EAAM,EAAE,CAAEH,UAAV,eACE,oBAAC,GAAD,EACE,SAAS,CAAC,QADZ,CAEE,OAAO,CAAE,IAAM,CACbF,KAAK,CAACiB,OAAN,CAAcX,IAAd,EACAH,aAAa,CAAC,KAAD,CAAb,CACAI,OAAO,CAAC,CACNH,KAAK,CAAE,EADD,CAENC,OAAO,CAAE,EAFH,CAAD,CAAP,CAID,CATH,eAWE,oBAAC,OAAD,MAXF,CADF,CAjBF,CADF,CADF,CAqCD,CAED,cAAeN,CAAAA,UAAf","sourcesContent":["import React from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport FAB from \"@material-ui/core/Fab\";\n\nfunction CreateArea(props) {\n  const [isExpanded, setIsExpanded] = React.useState(false);\n\n  const [note, setNote] = React.useState({\n    title: \"\",\n    content: \"\",\n  });\n\n  function handleChange(event) {\n    const { value, name } = event.target;\n\n    setNote((prevNote) => {\n      return {\n        ...prevNote,\n        [name]: value,\n      };\n    });\n  }\n\n  function expandNoteArea() {\n    setIsExpanded(true);\n  }\n\n  return (\n    <div>\n      <form onSubmit={(e) => e.preventDefault()}>\n        {isExpanded && (\n          <input\n            onChange={handleChange}\n            name=\"title\"\n            placeholder=\"Title\"\n            value={note.title}\n          />\n        )}\n        <textarea\n          onClick={expandNoteArea}\n          onChange={handleChange}\n          name=\"content\"\n          placeholder=\"Take a note...\"\n          rows={isExpanded ? \"3\" : \"1\"}\n          value={note.content}\n        />\n        <Zoom in={isExpanded}>\n          <FAB\n            className=\"button\"\n            onClick={() => {\n              props.addNote(note);\n              setIsExpanded(false);\n              setNote({\n                title: \"\",\n                content: \"\",\n              });\n            }}\n          >\n            <AddIcon />\n          </FAB>\n        </Zoom>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n"]},"metadata":{},"sourceType":"module"}